/*     */ package com.mchange.v2.c3p0.stmt;
/*     */ 
/*     */ import java.lang.reflect.Method;
/*     */ import java.sql.Connection;
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ final class SimpleStatementCacheKey
/*     */   extends StatementCacheKey
/*     */ {
/*     */   static StatementCacheKey _find(Connection pcon, Method stmtProducingMethod, Object[] args)
/*     */   {
/*  35 */     String stmtText = (String)args[0];
/*  36 */     boolean is_callable = stmtProducingMethod.getName().equals("prepareCall");
/*     */     
/*     */ 
/*     */ 
/*     */ 
/*     */     Integer resultSetHoldability;
/*     */     
/*     */ 
/*     */ 
/*  45 */     if (args.length == 1)
/*     */     {
/*  47 */       int result_set_type = 1003;
/*  48 */       int result_set_concurrency = 1007;
/*  49 */       int[] columnIndexes = null;
/*  50 */       String[] columnNames = null;
/*  51 */       Integer autogeneratedKeys = null;
/*  52 */       resultSetHoldability = null;
/*     */     } else { Integer resultSetHoldability;
/*  54 */       if (args.length == 2)
/*     */       {
/*  56 */         Class[] argTypes = stmtProducingMethod.getParameterTypes();
/*  57 */         Integer resultSetHoldability; Integer autogeneratedKeys; String[] columnNames; int[] columnIndexes; int result_set_concurrency; int result_set_type; if (argTypes[1].isArray())
/*     */         {
/*  59 */           Class baseType = argTypes[1].getComponentType();
/*  60 */           Integer resultSetHoldability; if (baseType == Integer.TYPE)
/*     */           {
/*  62 */             int result_set_type = 1003;
/*  63 */             int result_set_concurrency = 1007;
/*  64 */             int[] columnIndexes = (int[])args[1];
/*  65 */             String[] columnNames = null;
/*  66 */             Integer autogeneratedKeys = null;
/*  67 */             resultSetHoldability = null;
/*     */           } else { Integer resultSetHoldability;
/*  69 */             if (baseType == String.class)
/*     */             {
/*  71 */               int result_set_type = 1003;
/*  72 */               int result_set_concurrency = 1007;
/*  73 */               int[] columnIndexes = null;
/*  74 */               String[] columnNames = (String[])args[1];
/*  75 */               Integer autogeneratedKeys = null;
/*  76 */               resultSetHoldability = null;
/*     */             }
/*     */             else {
/*  79 */               throw new IllegalArgumentException("c3p0 probably needs to be updated for some new JDBC spec! As of JDBC3, we expect two arg statement producing methods where the second arg is either an int, int array, or String array.");
/*     */             }
/*     */             
/*     */           }
/*     */         }
/*     */         else
/*     */         {
/*  86 */           int result_set_type = 1003;
/*  87 */           int result_set_concurrency = 1007;
/*  88 */           int[] columnIndexes = null;
/*  89 */           String[] columnNames = null;
/*  90 */           Integer autogeneratedKeys = (Integer)args[1];
/*  91 */           resultSetHoldability = null;
/*     */         }
/*     */       } else { Integer resultSetHoldability;
/*  94 */         if (args.length == 3)
/*     */         {
/*  96 */           int result_set_type = ((Integer)args[1]).intValue();
/*  97 */           int result_set_concurrency = ((Integer)args[2]).intValue();
/*  98 */           int[] columnIndexes = null;
/*  99 */           String[] columnNames = null;
/* 100 */           Integer autogeneratedKeys = null;
/* 101 */           resultSetHoldability = null;
/*     */         } else { Integer resultSetHoldability;
/* 103 */           if (args.length == 4)
/*     */           {
/* 105 */             int result_set_type = ((Integer)args[1]).intValue();
/* 106 */             int result_set_concurrency = ((Integer)args[2]).intValue();
/* 107 */             int[] columnIndexes = null;
/* 108 */             String[] columnNames = null;
/* 109 */             Integer autogeneratedKeys = null;
/* 110 */             resultSetHoldability = (Integer)args[3];
/*     */           }
/*     */           else {
/* 113 */             throw new IllegalArgumentException("Unexpected number of args to " + stmtProducingMethod.getName()); } } } }
/*     */     Integer resultSetHoldability;
/*     */     Integer autogeneratedKeys;
/*     */     String[] columnNames;
/*     */     int[] columnIndexes;
/* 118 */     int result_set_concurrency; int result_set_type; return new SimpleStatementCacheKey(pcon, stmtText, is_callable, result_set_type, result_set_concurrency, columnIndexes, columnNames, autogeneratedKeys, resultSetHoldability);
/*     */   }
/*     */   
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */   SimpleStatementCacheKey(Connection physicalConnection, String stmtText, boolean is_callable, int result_set_type, int result_set_concurrency, int[] columnIndexes, String[] columnNames, Integer autogeneratedKeys, Integer resultSetHoldability)
/*     */   {
/* 139 */     super(physicalConnection, stmtText, is_callable, result_set_type, result_set_concurrency, columnIndexes, columnNames, autogeneratedKeys, resultSetHoldability);
/*     */   }
/*     */   
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */   public boolean equals(Object o)
/*     */   {
/* 151 */     return StatementCacheKey.equals(this, o);
/*     */   }
/*     */   
/* 154 */   public int hashCode() { return StatementCacheKey.hashCode(this); }
/*     */ }


/* Location:              E:\BaiduYunDownload\伊萨时期的一些代码\SparkEngine终极版\jars\YISAEngineBySpark2-4.0.6-SNAPSHOT-jar-with-dependencies.jar!\com\mchange\v2\c3p0\stmt\SimpleStatementCacheKey.class
 * Java compiler version: 4 (48.0)
 * JD-Core Version:       0.7.1
 */